<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 今是昨非 | 技术.生活.阅读.思考</title>
    <link>http://tubaozi.top/posts/</link>
    <description>Recent content in Posts on 今是昨非 | 技术.生活.阅读.思考</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 05 Apr 2024 00:26:54 +0800</lastBuildDate><atom:link href="http://tubaozi.top/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>资源：视频观看下载</title>
      <link>http://tubaozi.top/posts/2024/resource_video/</link>
      <pubDate>Fri, 05 Apr 2024 00:26:54 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2024/resource_video/</guid>
      <description>常用的影视资源信息，包括网盘搜索、在线/app观看、下载等
当前更新于：2024.04.05
简单说下 看视频我一直习惯「先存后看」：之前是BT下载到本地，现在是转存到阿里网盘(虽然最后很可能变成只存不看😂)。
网盘搜索 各种资源都可以搜索，不只影视
网盘导航 - 奔跑中的奶酪：奶大的网盘搜索导航贴，很不错
阿里云盘资源搜索引擎 - 阿里搜：顾名思义，只搜索阿里云盘
小云搜索 - 阿里云盘夸克网盘搜索神器 蓝奏云搜索：这个不错，搜了几个都能找到
皮卡搜索：支持阿里、百度、夸克、蓝奏云等多个网盘
咔帕搜索 - 资源超丰富的综合云盘资源搜索网站！：同上支持多个。但默认的「智能搜索」太拉胯，需要改成「精准搜索」
盘友圈：支持阿里、百度和夸克，用的少，但好像还挺好用。
奇妙搜索：曾经最常用的，奇妙应用作者的项目。目前已经关了，但我直觉还会回来。
在线视频网站 影视森林：视频网站导航
BTNULL 无名小站：片库网，提供视频在线观看、磁力下载网盘下载和 vip 解析
获取网址：发送主题包含”最新网址“的邮件给get@btnull.org，会自动回复包含最新网址信息的邮件。 视频解析-全民解析-vip视频解析-在线视频解析：vip 视频解析
91毒舌电影：收录了国内外、爱奇艺、优酷、腾讯、Netflix等等VIP平台热门的欧美日韩剧等影视资源，提供了网页和 app，网站干净无广告，而且有各种专题。
南柯电影网-追最新电视剧-看热门电影：差不多
人人影视 - 人人影视PRO - 聚合全网高清影视在线观看
学霸网盘影视 - 阿里云盘,百度网盘,夸克网盘下载
奈飞工厂-一个致力于免费提供Netflix影剧动漫的流媒体播放平台：专门的网飞视频网站
只下载
电影天堂_电影下载_高清首发
体育直播
178直播-欧洲杯直播_足球即时比分直播_足球比赛直播_NBA篮球比分直播_欧洲杯直播_欧洲杯视频直播_足球直播_足球比分直播
JRS低调看球-JRS直播NBA无插件|低调看直播|足球直播吧|世界杯直播吧
看球通体育_NBA直播吧_足球直播_篮球直播_英超直播_欧洲杯直播_体育直播_纬来体育
app 这类 app 其实很多，但是经常会用不了，我目前的措施是使用「app 壳」+「视频源」的方案，可在手机和电视上直接观看。
参考网站：
TVBox Android TV 版 - 家用安卓电视盒子 - 小众软件 o0HalfLife0o/TVBoxOSC(官方) TG 频道：TVBox开发版 盒子地窖：各种 app 和视频源 </description>
    </item>
    
    <item>
      <title>昭昭肺炎康复复盘</title>
      <link>http://tubaozi.top/posts/2023/baby-pneumonia-review/</link>
      <pubDate>Fri, 15 Dec 2023 14:30:53 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/baby-pneumonia-review/</guid>
      <description>宝宝生病，前后折腾了半个多月，列张表格复盘一下，总结经验教训。</description>
    </item>
    
    <item>
      <title>美</title>
      <link>http://tubaozi.top/posts/2023/liu-yi-fei/</link>
      <pubDate>Fri, 17 Nov 2023 22:58:02 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/liu-yi-fei/</guid>
      <description>发现美，欣赏美，理解美。
刘亦菲参加迪士尼《星愿》首映礼，值得发一篇文。</description>
    </item>
    
    <item>
      <title>应不应该用 ai 总结文章</title>
      <link>http://tubaozi.top/posts/2023/summarize-article-using-ai/</link>
      <pubDate>Fri, 17 Nov 2023 17:22:53 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/summarize-article-using-ai/</guid>
      <description>思考 大模型异军突起，很多以前实现起来很困难的功能在大模型前面变的轻而易举，「总结」能力就是其中一种。在我用的起劲的时候，突然反思，我这样做对吗？会不会让我自己丧失总结的能力？会不会失去阅读的兴趣？
画了个波士顿矩阵：
想了想，工具是帮助自己的，人类发明了计算器我能怕丧失计算能力而不用吗？君子爱器，取之有道，只要把握好一个度就好了。用ai总结的目的是帮自己快速过滤没有意义的文章，剩下的文章是需要自己认真研读的。
所以可以这么做：让ai总结，并问一些问题，比如文中是否有不合直觉的地方等等然后再决定是否详读。
资源 整理一下当前可以用的ai总结工具
kimi ：个人觉得最好用 kagi：内容多，但没有重点 sider：浏览器扩展，需要选中文本再操作 poe.com 内置的ai agent，比如：Summarise，URLsummary，Webpage等等 </description>
    </item>
    
    <item>
      <title>XREAL Air2&amp;Beam使用体验</title>
      <link>http://tubaozi.top/posts/2023/xreal-ar-glasses/</link>
      <pubDate>Fri, 17 Nov 2023 17:07:12 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/xreal-ar-glasses/</guid>
      <description>TL;DR 主要就是通过 Beam 安装的 app 看视频(B站和阿里云盘)，拥有了之前没有过的体验，不后悔 3dof功能非常有用：降低眩晕，而且会有真实感(所以没买雷鸟是对的) Beam续航大概四五个小时，发热严重，风扇有点响，按键声音有点响，感觉廉价 缘由 家里有了孩子后看电视就不方便，顺便也想玩vr/ar，借来朋友的pico4体验，除了乒乓游戏和看普通视频以外，别的感受都不怎么好，续航段，闷且眩晕感强烈，所以打消了买vr头显的念头。
然后考察AR，对比了雷鸟和xreal选择了后者。感觉XREAL更酷一点，而且3dof悬停功能才有ar的感觉，不然就只是一个屏幕。
产品：XREAL Air 2 + Beam 价格：3123 渠道：京东 开箱全家福 这里该有一张设备和配件的全家福😂
Air 2使用感受 屏幕：接上beam，点亮屏幕的一刻，感觉还是很震撼的，在我眼前竟然有这么大一个屏幕，真就像坐在电影院一样。而且屏幕是非常清晰的，小字基本也能看清。
音质：对于木耳的我来说，眼镜的声音效果也还好，很新奇的一个特点是官方宣传的「相位消除」技术，真就能达到声音只有自己能听到，旁边的人几乎听不见的情况。深夜看剧体验不错。
佩戴：佩戴效果感觉也还好，比普通眼镜舒适度差一点，而且总有种带的位置不对的感觉。不过随着使用次数感觉越来越适应了。
眼镜使用：眼镜本身没有电池，需要配合设备，比如手机、电脑等使用。
在手机上：需要支持dp输出功能(oppo、华为等安卓旗舰支持)，我自己是小米13，没法使用。 在电脑上：有两种使用方式，直连即可作为一个外接屏幕；或者使用官方提供的Nebula工具，可以实现多个屏幕悬浮显示，效果很惊艳，但会有晃动和模糊的情况，用来办公的话还是差点。 Beam使用感受 基于我的手机不能直连，所以Beam成了必选项。
Beam实际上就是一个低配能装apk的安卓盒子，额外提供3dof功能。不过对我来说已经够了，我在里面装了：bbll(bilibili三方app)、阿里云盘和电视直播app。
不得不提的是3dof功能，能够吧屏幕「定」在空间某一处，减少眩晕增强虚拟现实感受，这还挺好的。
但是beam本身素质就有点查了，续航三四个小时中规中矩，用十几分钟风扇就呼呼转，机身也是热乎乎的。最让我受不了的是按键声音贼差，质感特别廉价，我只能把beam藏在被窝里用。</description>
    </item>
    
    <item>
      <title>信息量转换</title>
      <link>http://tubaozi.top/posts/2023/information-unit-conversion/</link>
      <pubDate>Fri, 27 Oct 2023 14:57:10 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/information-unit-conversion/</guid>
      <description>一个例子 Mac中的一个文件，显示大小为：1884463字节，显示MB大小位1.9。
但是，1884463/1024/1024 = 1.797…，这是什么原因呢？
我们再使用du来查看这个文件：
又不一样了，这是为什么呢？使用 man du 可以看到如下说明
两个标准：IEC和SI IEC：国际电工委员会。1999年1月，国际电工委员会（IEC）引入了“kibi-”、“mebi-”、“gibi-”等词头以及缩写符号“Ki”、“Mi”、“Gi”等来明确说明二进制乘数计数。
SI：International System of Units，国际单位制，也就是：
也就是说：
1GB = 10^3 MB = 10^6 KB = 10^9 B # 优盘，磁盘厂家常用 1GiB = 2^10 MiB = 2^20 KiB = 2^30 B 而我们平常中的 GB/MB/KB等的1024转换实际上是以讹传讹就这么用下来了。
两个领域：计算机和通信 上面说的GB/MB实际都属于计算机领域，
而我们常用的比特率bps则属于通信领域，在通信领域，一般遵守SI规范，即换算为1000，如：
1Gbps = 10^3 Mbps = 10^6 kbps = 10^9 bps 请再次注意上面的大小写。这也是SI 的标准
总结一下 计算机领域一般以2^10为进制，通信领域一般以10^3为进制，通信领域一般遵守SI标准 1GB=1024MB其实是错的，准确的是 1Gib=1024MiB 在电信领域，没有g，m，K，只有G，M，k (学术上) 1Mbps = 1000kbps 参考 https://zh.wikipedia.org/wiki/国际单位制词头</description>
    </item>
    
    <item>
      <title>为博客添加giscus评论系统</title>
      <link>http://tubaozi.top/posts/2023/add-giscus-comment/</link>
      <pubDate>Thu, 10 Aug 2023 15:58:13 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/add-giscus-comment/</guid>
      <description>背景 调研了很多静态博客的评论系统：
utterances Giscus(教程)，继承自utterances https://twikoo.js.org/ 评论系统(教程) Gittalk：利用issue直接作为博文 waline 已经装完了utterances，在整理资料的时候发现giscus好像更好：有中文+能回复，所以临时改成了giscus
前置准备 确定仓库：一般选择博客本身即可，比如这里我的 Beeta/beeta.github.io，要确保是公开的
安装giscus(选择上面的仓库)
启用Discussions功能
获取giscus配置 完成上述准备工作后就可以访问 giscus 官网 获取配置信息了
关注点：
仓库要写前面明确的仓库 页面和discussion的映射关系一般用第一个 分类选Announcements，因为这个类型的discussion只有管理员才有权限操作 做完上面的操作后，会在下面生成一个script配置文件：
配置到博客系统 复制上面的script代码段。添加到当前使用主题目录文件nw对应的位置。
我用的Papermod，路径在：themes/PaperMod/layouts/partials/comments.html
提交代码，就可以在博文最下面看到评论框了。</description>
    </item>
    
    <item>
      <title>如何高效地阅读 Python 代码？</title>
      <link>http://tubaozi.top/posts/2023/reading_code/</link>
      <pubDate>Sun, 06 Aug 2023 13:57:25 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/reading_code/</guid>
      <description>副标题：一个重要但很少被讨论的技能
从网上看到这篇英文文章，感觉还不错，翻译了一下。Claude2 也有参与翻译😝
AI摘要 这篇文章讨论了阅读代码的重要性以及一些高效阅读代码的策略。作者指出，阅读代码需要不同于编写代码的技能，并且认为相信自己可以轻松地阅读发布的解决方案是一个常见的误解。文章提供了一个练习的代码库，并展示了一些阅读代码的策略，如忽略函数定义和简化重复的代码块。作者还强调了使用IDE（集成开发环境）来帮助快速识别和关注代码的重要性。最后，文章提到了编写可读的代码以及学习阅读其他人的代码和第三方库的重要性。
正文 阅读代码是一项重要的技能，但却不常被讨论。我认为存在这样的假设：如果你学会了相当好地编写代码，你也会自动学会有效地阅读代码。但是阅读代码需要不同于编写代码的技能，所以我不认为这是一个安全的假设。
一位读者最近询问《Python Crash Course》中练习的一个解决方案。他说他的解决方案比我发布的简单许多，并说他们很难阅读发布的解决方案。我认为这是一个很好的例子，说明有效代码阅读的策略根本不明显。在这篇文章中，我将展示我们讨论的代码，以及一些比从头到尾逐行阅读更有效的处理代码的策略。
练习内容 我们讨论的练习分两个部分。第一部分是:
彩票
制作一个包含10个数字和5个字母的列表或元组。 从中随机选择4个数字或字母,打印出匹配这4个数字或字母的任意一注彩票可获奖。 这个练习旨在让人们练习使用Python标准库中的代码，比如 random.choice()函数。
下面是后续练习:
彩票分析
你可以用一个循环来模拟刚刚建立的彩票游戏有多难中奖。 建一个名为 my_ticket 的列表或元组。 编写一个循环获取数字，直到抽中的彩票获奖为止，循环结束后打印循环了多少次才得到中奖的彩票。 在读者已经开始学习序列、循环、函数和类的时候，给他们布置这样一个既具体又开放的练习是很有意思的。对这样的练习任务制定解决方案，可以应用你所学的知识。
发布的解决方案 如果你不习惯阅读代码，发布的解决方案会觉得有点长，但我全部贴出来：
from random import choice def get_winning_ticket(possibilities): &amp;#34;&amp;#34;&amp;#34;Return a winning ticket from a set of possibilities.&amp;#34;&amp;#34;&amp;#34; winning_ticket = [] # We don&amp;#39;t want to repeat winning numbers or letters, so we&amp;#39;ll use a # while loop. while len(winning_ticket) &amp;lt; 4: pulled_item = choice(possibilities) # Only add the pulled item to the winning ticket if it hasn&amp;#39;t # already been pulled.</description>
    </item>
    
    <item>
      <title>关于IPython的几个冷知识</title>
      <link>http://tubaozi.top/posts/2023/ipython_tips/</link>
      <pubDate>Wed, 19 Jul 2023 15:23:05 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/ipython_tips/</guid>
      <description>一直在用ipython，有几个很重要的tip是今天才知道。
使用python -m 打开ipython 因为ipython在安装时候已经写入到了python命令同目录下，所以平常直接ipython就可以进入了。但最近突发奇想，想用python -m ipython打开，却发现打不开
python3 -m ipython # 报错：/xxxxxx/bin/python: No module named ipython 研究了好久才发现，原来需要有大小写！
python3 -m IPython 那新问题又来了，我怎么知道我装的模块实际名字是什么呢？不去查谁知道ipython的正式名字是IPython呢。我们可以用pkgutil这个内置模块进行查询
import pkgutil for module in pkgutil.iter_modules(): if &amp;#34;ipython&amp;#34; in module.name.lower(): # 注意把模块名都小写化，同时去除这个条件也可以输出所有的模块名字 print(module.name) ipython -i 用法 之前没用过，在研究上面问题的时候看到了。这个参数的含义是加载一个py文件并进入交互系统，作用就是进入ipython之后，我们就可以直接调用py文件内定义的变量和函数了。
比如有个文件script.py
# script.py x = 10 y = 20 def add(a, b): return a + b 我们使用python3 -m IPython -i script.py 或者 ipython -i script.py 进入ipython
In [1]: x Out[1]: 10 In [2]: y Out[2]: 20 In [3]: print(add(3,5)) 8 未完待续 </description>
    </item>
    
    <item>
      <title>博文写作和发布最佳实践</title>
      <link>http://tubaozi.top/posts/2023/blog_write_best_practices/</link>
      <pubDate>Sun, 09 Jul 2023 01:31:39 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/blog_write_best_practices/</guid>
      <description>之前在平台上写博文，写完发布拉倒。现在自己建站，虽然自由了些，但牵扯到hugo、github提交和发布，麻烦了点，现在把流程规范和记录下来。
1. 创建博文目录 goblog # alias命令，cd到博客所在的git仓库 # 新建博文markdown # 规范：posts/年份/博文标题目录/index.md -》最中路径在content下 # 年份是便于分类，博文标题做目录是为了让图片和md文件在一块，标题用英文，在url上好看些，md文档的front matter 的title字段可定义中文标题 hugo new posts/2023/博文标题/index.md 2. 使用 wolai + typora 编辑md文件 使用wolai编辑正文，使用 typora 编辑front matter和查看图片引用是否正常
使用 wolai 编辑正文，然后以md格式导出，将该文件与上述index.md文件合并 使用 typora 打开文件并编辑： open -a typora content/posts/2023/博文标题/index.md 编辑front matter：
注意编辑标题、分类、tag等， draft 改为 false， slug 是博文 url 的最后字段，如果为空默认就用当前目录，slug会默认做转换：将所有字母转换为小写字母，「-」替换空格，删除所有特殊字符 另外，还要在typora中设置「图片复制到./assets文件夹」
3. 本地预览 写完后，可用以下命令预览，其中 -D 是显示草稿文章。
hugo server -D 4. 提交到github # 一般情况下 git add -A git cm -m &amp;#34;添加博文xx&amp;#34; git push origin master # 可能需要代理 提交后，会激活github action自动发布，稍后即可在 tubaozi.</description>
    </item>
    
    <item>
      <title>Hugo 静态博客搭建指南</title>
      <link>http://tubaozi.top/posts/2023/create_blog_with_hugo/</link>
      <pubDate>Mon, 12 Jun 2023 00:07:59 +0800</pubDate>
      
      <guid>http://tubaozi.top/posts/2023/create_blog_with_hugo/</guid>
      <description>一直想着建个自己的网站，顺便折腾点主题。前几天突发奇想注册了这个域名。顺手也把网站搭起来。调研了现在静态博客的情况，之前印象中的流行框架 HEXO 已然被 Hugo 盖住了风头。学习了下 Hugo，够简单，功能也够丰富。虽然网上 Hugo 搭建指南一大把，但我还是记录一下自己的使用过程，也作为第一篇正式博文。
你可以在这篇博客中了解到：
Hugo 搭建静态博客方法 利用 github pages 托管网页 利用 github action 自动发布网页 一些建站过程中的 tips 安装Hugo Hugo的官网是https://gohugo.io/，另外有个中文文档网站https://gohugo.org/也可以参考。
官方推荐了很多安装方式，但我觉得直接下载二进制文件最为方便(升级需要手动)，Hugo有标准版、扩展版两个版本，扩展版支持对 WebP 图像进行编码和使用嵌入式 LibSass 转译器将 Sass 转译到 CSS，官方也推荐使用扩展版。
下载后，放到对应路径，添加到 PATH 环境变量，更方便使用。安装完后，使用以下命令进行验证：
hugo version 使用Hugo 生成站点 即在指定路径下生成名为 sitename 的文件夹
hugo new site /path/to/sitename 站点目录结构：
▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ config.toml 创建文章 在content文件夹下新建posts文件夹并新建xx.md文档
hugo new posts/xx.md 默认生成的 xx.md 内容和解释如下：
title: &amp;#34;xx&amp;#34; # 网站显示的文章名字，可以与文件名不同 date: 2021-08-19T15:04:55+08:00 draft: true # 是否为草稿 # 下面两个默认没有，需要自己加 categories: [&amp;#34;互联网&amp;#34;] # 文章分类 tags: [&amp;#34;Hugo&amp;#34;, &amp;#34;Github Pages&amp;#34;, &amp;#34;Github Actions&amp;#34;, &amp;#34;CI/CD&amp;#34;] # 文章标签 一般情况下，我们都要新建这些文件构建网站的骨架：</description>
    </item>
    
  </channel>
</rss>
